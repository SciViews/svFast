% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Log_}
\alias{Log_}
\alias{log10_}
\alias{log2_}
\alias{log1p_}
\alias{exp_}
\alias{expm1_}
\alias{log_}
\title{Logarithm (Fast Parallel Version)}
\usage{
log10_(x, para = 50000L)

log2_(x, para = 50000L)

log1p_(x, para = 50000L)

exp_(x, para = 50000L)

expm1_(x, para = 50000L)

log_(x, base = 2.71828182845905, para = 50000L)
}
\arguments{
\item{x}{vector of numeric values}

\item{para}{the minimum length of \code{x} to use parallel computation (50000
by default)}

\item{base}{the base of the logarithm (e = \code{exp(1)} by default)}
}
\value{
A numeric vector, matrix, or data frame with the transformed values.
}
\description{
Fast version of logarithmic and exponential functions (when vector size >=
50000). \code{\link[=log_]{log_()}} computes the natural logarithm of \code{x} (base \code{e} by default),
\code{\link[=log2_]{log2_()}} computes the base 2 logarithm, \code{\link[=log10_]{log10_()}} computes the base 10.
\code{\link[=log1p_]{log1p_()}} computes \code{log(1 + x)} accurately even for small \code{x}.

\code{\link[=exp_]{exp_()}} computes the exponential function. \code{\link[=expm1_]{expm1_()}} computes \code{exp(x) - 1}
accurately even for small \code{x}.
}
\details{
They are \strong{not} generic functions and do not process factor, Date, POSIXt,
difftime, complex, or S4 objects (use base R equivalent function instead).
Data frames are processed column-wise, providing each column is compatible.
All attributes are preserved.
}
\examples{
log_(1:5)
log_(1:5, base = 2.5)
}
\seealso{
\code{\link[=log10]{log10()}}, \code{\link[=log2]{log2()}}, \code{\link[=log]{log()}}, \code{\link[=log1p]{log1p()}}, \code{\link[=exp]{exp()}}, \code{\link[=expm1]{expm1()}}
}
