// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// log_
RObject log_(RObject x, double base, const R_xlen_t paralen);
RcppExport SEXP _svFast_log_(SEXP xSEXP, SEXP baseSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type base(baseSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(log_(x, base, paralen));
    return rcpp_result_gen;
END_RCPP
}
// ceiling_
RObject ceiling_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_ceiling_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(ceiling_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}
// floor_
RObject floor_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_floor_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(floor_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}
// trunc_
RObject trunc_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_trunc_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(trunc_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}
// cos_
RObject cos_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_cos_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(cos_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}
// sin_
RObject sin_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_sin_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(sin_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}
// tan_
RObject tan_(RObject x, const R_xlen_t paralen);
RcppExport SEXP _svFast_tan_(SEXP xSEXP, SEXP paralenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type paralen(paralenSEXP);
    rcpp_result_gen = Rcpp::wrap(tan_(x, paralen));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_svFast_log_", (DL_FUNC) &_svFast_log_, 3},
    {"_svFast_ceiling_", (DL_FUNC) &_svFast_ceiling_, 2},
    {"_svFast_floor_", (DL_FUNC) &_svFast_floor_, 2},
    {"_svFast_trunc_", (DL_FUNC) &_svFast_trunc_, 2},
    {"_svFast_cos_", (DL_FUNC) &_svFast_cos_, 2},
    {"_svFast_sin_", (DL_FUNC) &_svFast_sin_, 2},
    {"_svFast_tan_", (DL_FUNC) &_svFast_tan_, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_svFast(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
